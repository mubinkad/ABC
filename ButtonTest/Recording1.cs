///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ButtonTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("27b2532a-e0cb-4de8-886e-db1ab8a914b5", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ButtonTestRepository repository.
        /// </summary>
        public static ButtonTestRepository repo = ButtonTestRepository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
            GetCount = "-1";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

        string _GetCount;

        /// <summary>
        /// Gets or sets the value of variable GetCount.
        /// </summary>
        [TestVariable("f6915455-b17c-424a-afb7-221afb980a9e")]
        public string GetCount
        {
            get { return _GetCount; }
            set { _GetCount = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Validate_CreatingARanorexSnapshot(repo.RanorexSite.CreatingARanorexSnapshotInfo);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'RxMainFrame.GenderRow6' and assigning its value to variable 'GetCount'.", repo.RxMainFrame.GenderRow6Info, new RecordItemIndex(1));
            //GetCount = repo.RxMainFrame.GenderRow6.Element.GetAttributeValueText("Text");
            //Delay.Milliseconds(0);
            
            //ObjectCount();
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1548522256716') on item 'JustWebObj.GoogleGoogleChrome.Text1548522256716'.", repo.JustWebObj.GoogleGoogleChrome.Text1548522256716Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.JustWebObj.GoogleGoogleChrome.Text1548522256716Info, "Text", "1548522256716");
            Delay.Milliseconds(100);
            
            JSONParsing();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.JustWebObj.GoogleGoogleChrome.Text1548522256716, false, new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Omer') on item 'UntitledNotepad.Text15'.", repo.UntitledNotepad.Text15Info, new RecordItemIndex(6));
            Validate.AttributeContains(repo.UntitledNotepad.Text15Info, "Text", "Omer");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'RxMainFrame.TopLeftHeaderCell'", repo.RxMainFrame.TopLeftHeaderCellInfo, new ActionTimeout(30000), new RecordItemIndex(7));
            repo.RxMainFrame.TopLeftHeaderCellInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Website", "Opening web site 'http://www.ranorex.com' with browser 'IE' in normal mode.", new RecordItemIndex(8));
            Host.Current.OpenBrowser("http://www.ranorex.com", "IE", "", false, false, false, false, false, true);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
