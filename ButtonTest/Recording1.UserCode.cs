///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace ButtonTest
{
    public partial class Recording1
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Validate_CreatingARanorexSnapshot(RepoItemInfo h1tagInfo)
        {
        	if(h1tagInfo.Exists(5000))
        	{
            	Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Creating a Ranorex snapshot') on item 'h1tagInfo'.", h1tagInfo);
            	Validate.AttributeEqual(h1tagInfo, "InnerText", "Creating a Ranorex snapshot");
        	}
        	else
        	{
        		Report.Log(ReportLevel.Info,"Validation Failed");
        	}
        }

        public void ObjectCount()
        {
        	var genderRow6 = repo.RxMainFrame.GenderRow6;
        	
        	//int x = genderRow6.FindDescendants
        	
        	var dataGridView1 = repo.RxMainFrame.DataGridView1;
        	
        	IList<Ranorex.Row> rows = dataGridView1.FindChildren<Row>();
        	
        	int count =0;
        	
        	foreach (Row row in rows)
        	{
        		IList<Ranorex.Cell> cells = row.FindDescendants<Cell>();
        		
	        	foreach (Cell cell in cells)
	        	{
	        		if (cell.Element.GetAttributeValueText("Text")=="Male")
	        		{
	        			count++;
	        		}
	        	}
	        }
        	
        	Report.Info(count+"");
        }

        public void JSONParsing()
        {
        	var text15 = repo.UntitledNotepad.Text15;

            // TODO: Replace the following line with your code implementation.
            throw new NotImplementedException();
        }

    }
}
